name: Java Spring Build Checker

on:
  pull_request:
    paths:
      - 'backend/src/**'
      - 'backend/build.gradle'
    branches:
      - backend
  workflow_dispatch:
    inputs:
      comment:
        description: '수동 trigger 사유'
        default: 'ex) 서버 설정 변경 등'

permissions:
  checks: write
  pull-requests: write

jobs:
  build:
    name: Build check
    runs-on: ubuntu-latest
    env:
      working-directory: backend
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'gradle'

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'techpick_db'
          mysql user: ${{ secrets.DOCKER_MYSQL_USERNAME }}
          mysql password: ${{ secrets.DOCKER_MYSQL_PASSWORD }}

#      - name: Make application.yaml
#        run: |
#          cd ./src/main/resources
#          touch ./application.yaml
#          echo "${{ secrets.APPLICATION_YAML }}" >> ./application.yaml
#        shell: bash
#        working-directory: ${{ env.working-directory }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}

      - name: Build with Gradle
        run: ./gradlew clean build --debug --exclude-task test
        working-directory: ${{ env.working-directory }}